services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderservicedb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  orderservice:
    build:
      context: ./backend/orderservice
      dockerfile: src/main/docker/Dockerfile.jvm
    image: orderservice
    container_name: orderservice
    depends_on:
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/orderservicedb
      QUARKUS_DATASOURCE_USERNAME: user
      QUARKUS_DATASOURCE_PASSWORD: password
      JAVA_TOOL_OPTIONS: "-XX:UseSVE=0"
    ports:
      - "8080:8080"
    restart: unless-stopped
  

  # spiff
  spiffworkflow-frontend:
    container_name: spiffworkflow-frontend-restaurant
    image: ghcr.io/sartography/spiffworkflow-frontend:latest
    depends_on:
      spiffworkflow-backend:
        condition: service_started
    environment:
      APPLICATION_ROOT: "/"
      PORT0: "${SPIFFWORKFLOW_FRONTEND_PORT:-8001}"
    ports:
      - "${SPIFFWORKFLOW_FRONTEND_PORT:-8001}:${SPIFFWORKFLOW_FRONTEND_PORT:-8001}/tcp"

  spiffworkflow-backend:
    container_name: spiffworkflow-backend-restaurant
    image: ghcr.io/sartography/spiffworkflow-backend:latest
    # Enable setting the ownership of created files to match the local user:group. For example:
    #     RUN_AS="$(id -u):$(id -g)" docker compose up -d
    user: ${RUN_AS:-0:0}
    environment:
      SPIFFWORKFLOW_BACKEND_ENV: "local_docker"
      FLASK_DEBUG: "0"
      FLASK_SESSION_SECRET_KEY: "${FLASK_SESSION_SECRET_KEY:-super_secret_key}"
      # WARNING: Frontend is a static site which assumes frontend port - 1 on localhost.
      SPIFFWORKFLOW_BACKEND_URL: "http://localhost:${SPIFF_BACKEND_PORT:-8000}"
      SPIFFWORKFLOW_BACKEND_EXTENSIONS_API_ENABLED: "true"
      SPIFFWORKFLOW_BACKEND_BPMN_SPEC_ABSOLUTE_DIR: "/app/process_models"
      SPIFFWORKFLOW_BACKEND_CONNECTOR_PROXY_URL: "${SPIFFWORKFLOW_BACKEND_CONNECTOR_PROXY_URL:-http://spiffworkflow-connector:8004}"
      SPIFFWORKFLOW_BACKEND_DATABASE_TYPE: "sqlite"
      SPIFFWORKFLOW_BACKEND_DATABASE_URI: "sqlite:////app/db_volume/db.sqlite3"
      SPIFFWORKFLOW_BACKEND_LOAD_FIXTURE_DATA: "false"
      SPIFFWORKFLOW_BACKEND_LOG_LEVEL: "DEBUG"
      SPIFFWORKFLOW_BACKEND_OPEN_ID_CLIENT_ID: "spiffworkflow-backend"
      SPIFFWORKFLOW_BACKEND_OPEN_ID_CLIENT_SECRET_KEY: "my_open_id_secret_key"
      SPIFFWORKFLOW_BACKEND_OPEN_ID_SERVER_URL: "http://localhost:${SPIFF_BACKEND_PORT:-8000}/openid"
      SPIFFWORKFLOW_BACKEND_PERMISSIONS_FILE_NAME: "example.yml"
      SPIFFWORKFLOW_BACKEND_PORT: "${SPIFF_BACKEND_PORT:-8000}"
      SPIFFWORKFLOW_BACKEND_RUN_BACKGROUND_SCHEDULER_IN_CREATE_APP: "true"
      SPIFFWORKFLOW_BACKEND_UPGRADE_DB: "true"
      SPIFFWORKFLOW_BACKEND_URL_FOR_FRONTEND: "http://localhost:${SPIFFWORKFLOW_FRONTEND_PORT:-8001}"
    ports:
      - "${SPIFF_BACKEND_PORT:-8000}:${SPIFF_BACKEND_PORT:-8000}/tcp"
    volumes:
      - ${SPIFFWORKFLOW_BACKEND_LOCAL_BPMN_SPEC_DIR:-./process_models}:/app/process_models
      - spiffworkflow_backend_db:/app/db_volume
    healthcheck:
      test: "curl localhost:${SPIFF_BACKEND_PORT:-8000}/v1.0/status --fail"
      interval: 10s
      timeout: 5s
      retries: 20

  spiffworkflow-connector:
    container_name: spiffworkflow-connector-restaurant
    image: ghcr.io/sartography/connector-proxy-demo:latest
    environment:
      FLASK_ENV: "${FLASK_ENV:-development}"
      FLASK_DEBUG: "0"
      FLASK_SESSION_SECRET_KEY: "${FLASK_SESSION_SECRET_KEY:-super_secret_key}"
      CONNECTOR_PROXY_PORT: "${SPIFF_CONNECTOR_PORT:-8004}"
    ports:
      - "${SPIFF_CONNECTOR_PORT:-8004}:${SPIFF_CONNECTOR_PORT:-8004}/tcp"
    healthcheck:
      test: "curl localhost:${SPIFF_CONNECTOR_PORT:-8004}/liveness --fail"
      interval: 10s
      timeout: 5s
      retries: 20

volumes:
  postgres_data:
  spiffworkflow_backend_db:
    driver: local